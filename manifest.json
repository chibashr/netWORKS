{
  "name": "NetWORKS",
  "version": "0.9.19",
  "description": "Network management and monitoring tool",
  "author": "NetWORKS Team",
  "license": "MIT",
  "main": "networks.py",
  "repository": {
    "type": "git",
    "url": "https://github.com/networks/networks.git"
  },
  "version_string": "0.9.19",
  "version_info": {
    "major": 0,
    "minor": 9,
    "patch": 19,
    "build": 301
  },
  "app_directory": "src",
  "main_module": "main",
  "entry_point": "main",
  "ui_framework": "pyside6",
  "ui_version": "6.4.0",
  "plugins_enabled": true,
  "external_plugins_directory": "plugins",
  "built_in_plugins_directory": "src/plugins",
  "workspace_directory": "workspaces",
  "default_workspace": "default",
  "data_directory": "data",
  "config_directory": "config",
  "logs_directory": "logs",
  "exports_directory": "exports",
  "command_outputs_directory": "command_outputs",
  "directory_structure_version": "2.0",
  "persistent_directories": true,
  "build_date": "2025-06-02",
  "release_notes": [
    "CRITICAL FIX: Fixed automatic directory creation for plugin workspace structures",
    "Command Manager plugin now creates required credential directories even when workspace is not properly initialized",
    "Enhanced fallback directory logic to prevent 'workspace directory not found' errors during plugin operations",
    "Fixed missing workspace group and subnet credential directory creation that caused plugin functionality failures",
    "Plugins now work reliably on fresh installations and when workspace directories are missing"
  ],
  "release_type": "stable",
  "versioning_scheme": "semver",
  "update_channel": "stable",
  "changelog": [
    {
      "version": "0.9.19",
      "build": 301,
      "date": "2025-06-02",
      "changes": [
        "CRITICAL FIX: Fixed automatic directory creation for plugin workspace structures",
        "Enhanced Command Manager credential store to automatically create required directories when workspace is not properly initialized",
        "Fixed _get_workspace_group_dir() and _get_workspace_subnet_dir() methods to have robust fallback logic like _get_workspace_device_dir()",
        "Added comprehensive fallback directory creation: try app_workspace_dir → device_manager workspace → data directory fallback → plugin data directory",
        "Eliminated 'Cannot get workspace group/subnet directory: app_workspace_dir is not set or doesn't exist' errors",
        "Plugin functionality now works reliably on fresh installations and when workspace directories are missing",
        "Improved error handling and directory creation for all credential storage operations",
        "Command Manager plugin can now save and load group/subnet credentials even without proper workspace initialization"
      ]
    },
    {
      "version": "0.9.18",
      "build": 300,
      "date": "2025-06-02",
      "changes": [
        "CRITICAL FIX: Fixed application portability across different systems",
        "Removed hardcoded D:\\ drive paths from config/user.yaml and config/default.yaml that caused 'PermissionError: [WinError 21] The device is not ready: D:\\' on systems without D:\\ drive",
        "Configuration files are now generated dynamically with relative paths based on application location",
        "Enhanced .gitignore to exclude system-specific configuration files (config/user.yaml, config/default.yaml, config/plugins.yaml, config/plugins.json, config/.setup_completed)",
        "Added data/, command_outputs/, and exports/ directories to .gitignore as they contain system-specific generated data",
        "Fixed plugin manager external_plugins_dir path calculation to use relative paths instead of absolute hardcoded paths",
        "Application now works correctly when copied between different systems and drive configurations",
        "Eliminates 'The device is not ready' errors when launching on new systems without specific drive letters"
      ]
    },
    {
      "version": "0.9.17",
      "build": 299,
      "date": "2025-05-30",
      "changes": [
        "CRITICAL FIX: Fixed workspace root path calculation in plugin manager",
        "Plugin manager was calculating workspace_root incorrectly (going up 3 levels instead of 2)",
        "This caused sys.path to point to wrong directory, preventing plugin imports",
        "Fixed path calculation: src/core/plugin_manager.py -> go up 2 levels to workspace root",
        "All three plugins (sample, network_scanner, command_manager) now load successfully",
        "Plugin import errors completely resolved"
      ]
    },
    {
      "version": "0.9.15",
      "build": 295,
      "date": "2025-05-30",
      "changes": [
        "CRITICAL FIX: Fixed plugin constructor errors for all plugins",
        "Fixed Sample Plugin constructor to accept app parameter that plugin manager passes during instantiation",
        "Fixed Network Scanner Plugin constructor to accept app parameter and prevent duplicate app assignment in initialize()",
        "Fixed Command Manager Plugin constructor to accept app parameter from plugin manager",
        "All three plugins (sample, network_scanner, command_manager) now load successfully without constructor parameter errors",
        "Enhanced plugin manager with live output display in plugin manager dialog during enable/disable/load operations",
        "Plugin loading now works correctly for all plugins without 'takes 1 positional argument but 2 were given' errors"
      ]
    },
    {
      "version": "0.9.13",
      "build": 294,
      "date": "2025-05-30",
      "changes": [
        "CRITICAL FIX: Fixed plugin loading module import errors",
        "Added missing __init__.py files to plugin packages (network_scanner, sample)",
        "Fixed plugin manager to properly set up sys.path during plugin loading",
        "Resolved 'No module named plugins.network_scanner' import errors when enabling plugins",
        "Enhanced plugin loading mechanism with temporary path management for proper module discovery",
        "Plugin imports now work correctly for both internal plugin modules and dependencies",
        "All plugins now load and enable successfully without import errors"
      ]
    },
    {
      "version": "0.9.12",
      "build": 281,
      "date": "2025-05-29",
      "changes": [
        "CRITICAL FIX: Plugin loading in executable mode completely overhauled",
        "Fixed version parsing error: 'invalid literal for int()' in build script",
        "Enhanced plugin loading with proper sys.path management for executables",
        "Fixed plugin instance loading in _transition_plugin_state method",
        "Added comprehensive Python environment detection for PyInstaller executables",
        "Consolidated to single NetWORKS.spec file for all builds",
        "Enhanced plugin import strategies for both script and executable modes",
        "Fixed plugin refresh functionality to prevent application freezing",
        "All plugin loading issues in executable mode now resolved",
        "Plugins work identically in script mode (.py) and executable mode (.exe)"
      ]
    },
    {
      "version": "0.9.12",
      "build": 280,
      "date": "2025-05-29",
      "changes": [
        "FIXED: Version display in About dialog and window title",
        "About dialog now shows correct version 0.9.12 with build number (Build 280)",
        "Window title displays full version with build number",
        "Splash screen shows complete version information",
        "Changelog in About dialog loads from manifest.json with proper formatting",
        "Enhanced About dialog layout with build date and license information",
        "All version references now read dynamically from manifest.json",
        "Consistent version display across all UI components"
      ]
    },
    {
      "version": "0.9.12",
      "build": 279,
      "date": "2025-05-29",
      "changes": [
        "FINAL ANTIVIRUS AND CLEANUP: Addressed Windows Defender warnings",
        "Removed UPX compression to reduce false positive antivirus detections",
        "Cleaned up all old build artifacts and temporary files",
        "Verified plugin loading fix is properly applied in source code",
        "Enhanced executable naming and version tracking",
        "Final production-ready build with all fixes consolidated",
        "Ready for distribution without antivirus interference"
      ]
    },
    {
      "version": "0.9.12",
      "build": 276,
      "date": "2025-05-29",
      "changes": [
        "FINAL CLEANUP: Consolidated all fixes and removed redundant files",
        "Removed duplicate spec files (NetWORKS_plugin_fix.spec, NetWORKS_test.spec, old networks.spec)",
        "Removed redundant build files (build.bat, setup.bat, old BUILD.md)",
        "Consolidated to single networks.spec with all fixes included",
        "Cleaned root directory of temporary and test files",
        "Verified all plugin loading fixes are properly applied",
        "Final clean executable naming: NetWORKS.exe",
        "All previous fixes consolidated into clean build system"
      ]
    },
    {
      "version": "0.9.12",
      "build": 275,
      "date": "2025-05-29",
      "changes": [
        "COMPLETE BUILD SYSTEM OVERHAUL: One-click building with all fixes",
        "Created build_networks.bat for simple click-and-run building",
        "Updated build.py with temp directory workaround for Windows permissions",
        "Enhanced PyInstaller configuration with all plugin dependencies",
        "Added comprehensive error handling and build status reporting",
        "Integrated all previous fixes: plugin loading, first-time setup, Python detection",
        "Created NetWORKS_fixed.spec with optimized build configuration",
        "Automated dependency installation and verification",
        "Version-specific executable naming (NetWORKS_v275.exe)",
        "Comprehensive build documentation and error prevention"
      ]
    },
    {
      "version": "0.9.12",
      "build": 273,
      "date": "2025-05-29",
      "changes": [
        "CRITICAL: Fixed plugin loading freeze in executable version",
        "Fixed sys.executable issue causing NetWORKS.exe to relaunch during plugin dependency installation",
        "Added smart Python interpreter detection for PyInstaller executables",
        "Plugin pip installations now work correctly in both script and executable modes",
        "Enhanced error handling for Python executable discovery",
        "Plugin loading no longer freezes or appears to relaunch the application"
      ]
    },
    {
      "version": "0.9.12",
      "build": 272,
      "date": "2025-05-29",
      "changes": [
        "Fixed first-time setup directory structure mismatch",
        "Updated workspace creation to use new directory layout (workspaces/ instead of config/workspaces/)",
        "Fixed Path object conversion in FirstTimeSetup constructor",
        "Verified plugin loading system works correctly with import fixes",
        "Successfully built and tested executable with first-time setup"
      ]
    },
    {
      "version": "0.9.12",
      "build": 271,
      "date": "2025-05-29",
      "changes": [
        "Fixed plugin loading import path issues",
        "Added plugins/__init__.py to make plugins directory a proper Python package",
        "Fixed pip installation conflicts with --user and --target flags",
        "Updated plugin loading to add correct sys.path entries for absolute imports",
        "Commented out problematic import in plugins/command_manager/__init__.py",
        "Successfully resolved 'No module named plugins.command_manager' errors"
      ]
    },
    {
      "version": "0.9.12",
      "build": 270,
      "date": "2025-05-29",
      "changes": [
        "Fixed plugin loading system - plugins now load correctly",
        "Added proper sys.path management for plugin imports",
        "Created plugins/__init__.py to make plugins directory a Python package",
        "Fixed pip dependency installation conflicts",
        "Resolved plugin discovery import errors",
        "Updated plugin documentation with troubleshooting guide"
      ]
    }
  ]
}